// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  email    String  @unique
  username    String?  @unique
  hash     String
  status   Boolean @default(false)
  googleId String? @unique

  roleId  Int
  role    Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  profile Profile?

  @@map("users")
}

model Role {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  name        String @unique
  permissions Json?
  user        User[]

  @@map("role")
}

model Profile {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  avatar    String?
  firstName String
  lastName  String
  dob       DateTime?
  gender    String?
  phone     String?
  city      String?
  state     String?
  country   String?
  address   String?
  zip       String?
  bio       String?
  sign      String?

  marital_status String?
  language       String?
  education      String?

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  @@map("profile")
}